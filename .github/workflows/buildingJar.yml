# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build_jar:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn  package -DskipTests
    - name: uploading jar
      uses: actions/upload-artifact@master
      with:
        name: springbootappJar
        path: target/springelastictesting-0.0.1-SNAPSHOT.jar



  create_image:
    runs-on: ubuntu-latest
    needs: build_jar

    steps:
      - name : get the jar file
        uses: actions/download-artifact@master
        with:
          name: springbootappJar

      - name : make directory for jar
        run: mkdir target
      - name: copy all jars to taget file
        run: cp *.jar /target
      - name: test for jars
        run: ls target/*.jar
      
