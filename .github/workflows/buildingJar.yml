# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:


env:
  REGISTRY: ghcr.io
  IMAGE_NAME : ra5enshuriken/api_backend
  IMAGE_TAG: 0.0.1
jobs:
  build_backend_jar:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven
    - name: Build with Maven
      run: mvn  package -DskipTests
    - name: uploading jar
      uses: actions/upload-artifact@master
      with:
        name: springbootappJar
        path: target/springelastictesting-0.0.1-SNAPSHOT.jar



  create_backend_image:
    runs-on: ubuntu-latest
    needs: build_backend_jar

    steps:
      - name: checkout the repo
        uses: actions/checkout@v3

      - name : get the jar file
        uses: actions/download-artifact@master
        with:
          name: springbootappJar
      - name: test files
        run: ls
      - name : Setup docker buildx
        uses: docker/setup-buildx-action@v1

      - name : Login in to ${{ env.REGISTRY }}
        uses: docker/login-action@v1
        with:
          registry: ${{env.REGISTRY}}
          username: ${{github.actor}}
          password: ${{ secrets.GIT_TOKEN }}

      - name: extract docker metadata
        id: meta
        uses: docker/metadata-action@v1
        with:
          images: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}

      - name: Build and Push Image
        id: build-and-push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{env.REGISTRY}}/${{env.IMAGE_NAME}}:${{env.IMAGE_TAG}}
          labels: ${{steps.meta.outputs.labels}}





